#!/usr/bin/env bash
trap 'echo "Error line $LINENO"' ERR # thrown when 'false' called
set -e                               # exit on any error

# stop if a command is missing
err=0
for cmd in gpg scp; do
  command -v $cmd >/dev/null && continue || { echo "need $cmd. command not found."; err=1; }
done
test $err -eq 1 && exit 1


if [ $# -lt 1 ]; then
    E=$(basename $0)
    echo "ENCRYPT & PUSH:"
    echo "$E ./src.txt   ./file.gpg      # single file"
    echo "$E ./dir       ./dir.gpg       # dir compressed"
    echo "$E ./src.txt   server:file.gpg # scp to server"
    echo
    echo "PULL & DECRYPT"
    echo "$E ./dir.gpg       ./"
    echo "$E server:file.gpg ./src.txt"
    echo "$E ./file.gpg      ./file.gpg -b # backup dst"
    echo
    exit 1
fi
SRC=$1
DST=$2
test "$3" == "-b" && BKP=$3
DO="null" # enc&push or pull&dec
echo "$SRC" | egrep -qi '.gpg$' && DO="pull&dec"
echo "$DST" | egrep -qi '.gpg$' && DO="enc&push"
[ "$DO" == "null" ] \
  && echo "error: either src or dst must be a .gpg file to indicate push or pull" && exit 1

if [ "$DO" == "enc&push" ]; then
    test -e $SRC         || ( echo "$SRC not exist" && false )
    cd $(dirname $SRC)   || ( echo "error" && false )
    SRC=$(basename $SRC)
    if [ -d $SRC ]; then
        tar -czf tmp.tar.gz || false 
        gpg --symmetric --output $SRC.gpg tmp.tar.gz || false
	rm tmp.tar.gz
    else
        gpg --symmetric --output $SRC.gpg $SRC           || false
    fi
    scp $SRC.gpg $DST                                    || ( echo "err scp $SRC.gpg" && false )
    rm $SRC.gpg
    echo "PULL BACK:"
    echo "$(basename $0) $DST $SRC"
elif [ "$DO" == "pull&dec" ]; then
    # if src is remote, download
    test ! -e $SRC && scp $SRC . || false
    SRCF=$(basename ${SRC#*:})

    file --brief $SRCF | grep -qi 'GPG'         || ( echo "$SRCF not gpg file" && false )

    gpg --output $SRCF.stage --decrypt $SRCF     || ( echo "error gpg -d $SRCF" && exit 1 )
    rm $SRCF

    if file --brief $SRCF.stage | grep -qi 'gzip compressed' ; then
        mv $SRCF.stage $SRCF.gz                  || false
        gzip -d $SRCF.gz --stdout > $SRCF.stage  || false
        rm $SRCF.gz
    fi

    if file --brief $SRCF.stage | grep -qi 'tar archive' ; then
        mv $SRCF.stage $DST/$SRCF.tar           || false
	cd $DST
        tar xvf $SRCF.tar                       || false
        rm $SRCF.tar
        rm $SRCF.stage
    else
        test -n "$BKP" && test -e $DST && cp $DST $DST.$(date +%s)
        mv $SRCF.stage $DST
    fi

    echo "PUSH BACK:"
    echo "$(basename $0) $DST $SRC"
fi
