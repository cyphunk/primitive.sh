#!/usr/bin/env bash
# run command with group that has internet blocked

if [ ! "$1" ]; then 
  echo "usage: $0 <command> [arguments]"; 
  exit 1; 
fi

root_check ()
{
    # check symlink security as well
    test -L $0 \
    && l=($(cd $(dirname $1) && /usr/bin/ls -l `pwd`)) \
    || l=($(/usr/bin/ls -l `/usr/bin/readlink -f $0`))
    [ ${l[0]:2:1} != "-" ] && [ "${l[2]}" != "root" ] ||
    [ ${l[0]:5:1} != "-" ] && [ "${l[3]}" != "root" ] ||
    [ ${l[0]:8:1} != "-" ] && { echo -e "only root should be able to modify\n${l[@]}"; exit 1;}
}
root_check
require_commands () 
{
    err=0
    for cmd in $*; do
        command -v $cmd >/dev/null && continue || { echo "$cmd command not found."; err=1; }
    done
    test $err -eq 1 && exit 1
}
require_commands sg iptables nc


GRP=no-internet ## change to your taste

# CREATE GROUP AND ADD USER
usr=$(whoami)
grep -q "^$GRP:" /etc/group > /dev/null \
|| sudo groupadd $GRP || exit
id $usr | grep -q "$GRP" \
|| sudo usermod -aG $GRP $usr || exit

# INIT RULES
# better to not make permanent. 
# BEWARE: other applications may create other
#         rules that reexpose your application to the internet.

#echo "Flush other rules that might interferer"
#sudo iptables -F OUTPUT || exit

echo "Enabling rules"
if sudo iptables -L | grep -q "owner GID match $GRP" ; then
	echo "Rules already enabled"
else
	sudo iptables -A OUTPUT -m owner --gid-owner $GRP -j LOG --log-prefix 'PACKET DROPPED: ' --log-level 0 || exit
	#sudo iptables -A OUTPUT -m owner --gid-owner $GRP -j DROP || exit
	sudo iptables -I OUTPUT 1 -m owner --gid-owner $GRP -j DROP || exit
fi

# MAKE SURE NET IS DOWN using ping OR nc
#sg no-internet "ping -c 1 -W 1 www.google.com"
sg no-internet "nc -z google.com 80" 2> /dev/null
if [ $? -eq 0 ]; then
	echo -e "\n### test failed (internet is up) exiting ###\n"
	exit
else
	echo -e "\n### test succeeded (internet is down) ###\n"
fi

sg $GRP "$*"
